/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

object EvenFibonacciNumbers {
  val solutionOne: Int = {
    def sumOfEvenFibNums(total: Int, num1: Int, num2: Int): Int = {
      val newTotal = if (num2 % 2 == 0) total + num2 else total
      if (num1 + num2 <= 4000000) sumOfEvenFibNums(newTotal, num2, num1 + num2) else newTotal
    }

    sumOfEvenFibNums(0, 1, 2)
  }

  val solutionTwo: Int = {
    def sumOfEvenFibNums(total: Int, num1: Int, num2: Int): Int = if (num2 <= 4000000) sumOfEvenFibNums(total + num2, num2, 4 * num2 + num1) else total
    sumOfEvenFibNums(2, 2, 8)
  }
}
